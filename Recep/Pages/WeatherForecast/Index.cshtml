@page "/weather-forecast"
@model Recep.Pages.WeatherForecast.IndexModel
@{
    ViewData["Title"] = "Weather Forecast";
}

<div class="section no-pad-bot" id="index-banner">
    <div class="container">
        <br><br>
        <h1 class="header center teal-text">Weather Forecast</h1>
        <div class="row center">
            <h5 class="header col s12 light">Calls the weather forecast API and displays the results</h5>
        </div>
        <br><br>
    </div>
</div>


<div class="container">
    <div class="section">

        <!--   Icon Section   -->
        <div class="row">
            <div class="col s12 m4">
                <div class="icon-block">
                    <h2 class="center light-blue-text"><i class="material-icons">flash_on</i></h2>
                    <h5 class="center">Speeds up development</h5>

                    <p class="light">We did most of the heavy lifting for you to provide a default stylings that incorporate our custom components. Additionally, we refined animations and transitions to provide a smoother experience for developers.</p>
                </div>
            </div>

            <div class="col s12 m4">
                <div class="icon-block">
                    <h2 class="center light-blue-text"><i class="material-icons">group</i></h2>
                    <h5 class="center">User Experience Focused</h5>

                    <p class="light">By utilizing elements and principles of Material Design, we were able to create a framework that incorporates components and animations that provide more feedback to users. Additionally, a single underlying responsive system across all platforms allow for a more unified user experience.</p>
                </div>
            </div>

            <div class="col s12 m4">
                <div class="icon-block">
                    <h2 class="center light-blue-text"><i class="material-icons">settings</i></h2>
                    <h5 class="center">Easy to work with</h5>

                    <p class="light">We have provided detailed documentation as well as specific code examples to help new users get started. We are also always open to feedback and can answer any questions a user may have about Materialize.</p>
                </div>
            </div>
        </div>

    </div>
    <br><br>
</div>



@section Scripts {
    <script type="text/javascript">
        'use strict';

        

        document.addEventListener("DOMContentLoaded", async (event) => {
            console.log("Catching event on window - target: " + event.target.constructor.name);

            const response = await fetch("http://weather-forecast-webapi.default.10.102.178.187.sslip.io/WeatherForecast");
            const movies = await response.json();
            console.log(movies);

        });

    </script>
}